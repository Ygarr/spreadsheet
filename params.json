{
  "name": "Spreadsheet",
  "tagline": "A simple spreadsheet implemented via Java",
  "body": "#Spreadsheet\r\n\r\n##Overview\r\nA spreadsheet is an interactive table for storing, analyzing and processing data. A cell can contain\r\nnumbers, operators, braces and references to other cells. A spreadsheet dynamically evaluates value in each cell.\r\n\r\n##Main window\r\n![main_window](http://i.imgur.com/lF9ZHxH.png)\r\nThe main window contains editable grid, text field to display entered formula in focused cell and\r\nbutton to toggle Formulas mode.\r\n\r\n##Supported operations\r\n* Addition '+'\r\n\r\n* Subtraction '-'\r\n\r\n* Multiplication '*'\r\n\r\n* Division '/'\r\n\r\n* Power '^'\r\n\r\n* Bitwise AND '&' and OR '|'\r\n\r\n##Reference format\r\nA reference is a latin letter, followed by number from 1 to 99.\r\n\r\n##Long arithmetic\r\nLong arithmetic is used to avoid integer overflow.\r\n![long_arithmetic](http://i.imgur.com/LNBFa7m.png)\r\n\r\n##Operators precedence\r\nOperators precedence are respected. \r\n![operator_precedence](http://i.imgur.com/Q8kSY3I.png)\r\n\r\n##Formulas Mode\r\nWhen Formulas Mode is toggled, cells display originally typed formula instead of evaluated value.\r\n![formula_mode](http://i.imgur.com/XqZs7HR.png)\r\n\r\n## Text parsing\r\nA Lexer is implemented in order to parse text. The Lexer uses regular expressions\r\nand named capturing groups to extract information from entered text.\r\n\r\n##Algorithms\r\n* **Tarjan's algorithm** to detect cycled references\r\n* **Topological sorting** to determine in what order evaluate cells\r\n* **Shunting-yard algorithm** to evaluate expression and respect precedence and braces\r\n\r\n######Copyright Â© 2016 by Vitaliy Kononenko, K-24",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}